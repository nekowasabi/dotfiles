snippet des
abbr Describe (js)
	describe('${1:description}', function() {
		${0:}
	});

snippet it 
abbr it (js)
	it('${1:description}', function() {
		${0:}
	});

snippet bef 
abbr before each (js)
	beforeEach(function() {
		${0:}
	});

snippet aft 
abbr after each (js)
	afterEach(function() {
		${0:}
	});

snippet befa 
abbr before all (js)
	beforeAll(function() {
		${0:}
	});

snippet afta 
abbr after all (js)
	afterAll(function() {
		${0:}
	});

snippet any 
abbr any (js)
	jasmine.any($1)

snippet anyt 
abbr anything (js)
	jasmine.anything()

snippet objc 
abbr object containing (js)
	jasmine.objectContaining({
		${VISUAL}${0:}
	});

snippet arrc 
abbr array containing (js)
	jasmine.arrayContaining([${1:value1}]);

snippet strm 
abbr string matching (js)
	jasmine.stringMatching(${1:matcher})

snippet ru 
abbr runs (js)
	runs(function() {
		${0:}
	});

snippet wa 
abbr waits (js)
	waits($1);

snippet ex 
abbr expect (js)
	expect(${1:target})${0:};

snippet ee 
abbr expect to equal (js)
	expect(${1:target}).toEqual(${2:value});

snippet el 
abbr expect to be less than (js)
	expect(${1:target}).toBeLessThan(${2:value});

snippet eg 
abbr expect to be greater than (js)
	expect(${1:target}).toBeGreaterThan(${2:value});

snippet eb 
abbr expect to be (js)
	expect(${1:target}).toBe(${2:value});

snippet em 
abbr expect to match (js)
	expect(${1:target}).toMatch(${2:pattern});

snippet eha 
abbr expect to have attribute (js)
	expect(${1:target}).toHaveAttr('${2:attr}'${3:, '${4:value}'});

snippet et 
abbr expect to be truthy (js)
	expect(${1:target}).toBeTruthy();

snippet ef 
abbr expect to be falsy (js)
	expect(${1:target}).toBeFalsy();

snippet etbd 
abbr expect to be defined (js)
	expect(${1:target}).toBeDefined();

snippet eud 
abbr expect to be defined (js)
	expect(${1:target}).toBeUndefined();

snippet en 
abbr expect to be null (js)
	expect(${1:target}).toBeNull();

snippet ec 
abbr expect to contain (js)
	expect(${1:target}).toContain(${2:value});

snippet ev 
abbr expect to be visible (js)
	expect(${1:target}).toBeVisible();

snippet eh 
abbr expect to be hidden (js)
	expect(${1:target}).toBeHidden();

snippet eth 
abbr expect to throw (js)
	expect(${1:target}).toThrow(${2:value});

snippet ethe 
abbr expect to throw error (js)
	expect(${1:target}).toThrowError(${2:value});

snippet notx 
abbr expect not (js)
	expect(${1:target}).not${0:};

snippet note 
abbr expect not to equal (js)
	expect(${1:target}).not.toEqual(${2:value});

snippet notl 
abbr expect to not be less than (js)
	expect(${1:target}).not.toBeLessThan(${2:value});

snippet notg 
abbr expect to not be greater than (js)
	expect(${1:target}).not.toBeGreaterThan(${2:value});

snippet notm 
abbr expect not to match (js)
	expect(${1:target}).not.toMatch(${2:pattern});

snippet notha 
abbr expect to not have attribute (js)
	expect(${1:target}).not.toHaveAttr('${2:attr}'${3:, '${4:value}'});

snippet nott 
abbr expect not to be truthy (js)
	expect(${1:target}).not.toBeTruthy();

snippet notf 
abbr expect not to be falsy (js)
	expect(${1:target}).not.toBeFalsy();

snippet notd 
abbr expect not to be defined (js)
	expect(${1:target}).not.toBeDefined();

snippet notn 
abbr expect not to be null (js)
	expect(${1:target}).not.toBeNull();

snippet notc 
abbr expect not to contain (js)
	expect(${1:target}).not.toContain(${2:value});

snippet notv 
abbr expect not to be visible (js)
	expect(${1:target}).not.toBeVisible();

snippet noth 
abbr expect not to be hidden (js)
	expect(${1:target}).not.toBeHidden();

snippet notth 
abbr expect not to throw (js)
	expect(${1:target}).not.toThrow(${2:value});

snippet notthe 
abbr expect not to throw error (js)
	expect(${1:target}).not.toThrowError(${2:value});

snippet s 
abbr spy on (js)
	spyOn(${1:object}, '${2:method}')${0:};

snippet sr 
abbr spy on and return (js)
	spyOn(${1:object}, '${2:method}').and.returnValue(${3:arguments});

snippet st 
abbr spy on and throw (js)
	spyOn(${1:object}, '${2:method}').and.throwError(${3:exception});

snippet sct 
abbr spy on and call through (js)
	spyOn(${1:object}, '${2:method}').and.callThrough();

snippet scf 
abbr spy on and call fake (js)
	spyOn(${1:object}, '${2:method}').and.callFake(${3:function});

snippet ethbc 
abbr expect to have been called (js)
	expect(${1:target}).toHaveBeenCalled();

snippet nthbc 
abbr expect not to have been called (js)
	expect(${1:target}).not.toHaveBeenCalled();

snippet ethbcw 
abbr expect to have been called with (js)
	expect(${1:target}).toHaveBeenCalledWith(${2:arguments});

